# Generated by Django 4.2.15 on 2024-08-14 14:37

import college.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isActive', models.BooleanField(blank=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tag_name', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isActive', models.BooleanField(blank=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('monthly_payment', models.CharField(blank=True, max_length=300, null=True)),
                ('delivery_time', models.TimeField(blank=True, null=True)),
                ('schedule', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DailyImageSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DryingMashineCleanImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isActive', models.BooleanField(blank=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('mobile', models.BigIntegerField(blank=True, default=0, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('employee_type', models.CharField(blank=True, choices=[('Admin', 'Admin'), ('Campus_Employee', 'Campus Employee'), ('Driver', 'Driver'), ('Washing', 'Washing'), ('Drying', 'Drying'), ('Segregation', 'Segregation')], max_length=20, null=True)),
                ('salary', models.IntegerField(blank=True, default=0)),
                ('aadhar_number', models.BigIntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeDailyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to=college.models.upload_location)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FacultyDaySheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tag_number', models.CharField(blank=True, max_length=20, null=True)),
                ('regular_cloths', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentDaySheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tag_number', models.CharField(blank=True, max_length=20, null=True)),
                ('regular_cloths', models.IntegerField(blank=True, default=0, null=True)),
                ('uniforms', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentRemark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_number', models.CharField(blank=True, max_length=20, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleExpenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expense_type', models.CharField(blank=True, max_length=200, null=True)),
                ('amount', models.IntegerField(blank=True, default=0, null=True)),
                ('expense_date', models.DateField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WashingMashineCleanImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WashingMashine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isActive', models.BooleanField(blank=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mashine_number', models.CharField(blank=True, max_length=100, null=True)),
                ('last_cleaned_date', models.DateField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('0', 'Not In use'), ('1', 'Working')], max_length=100, null=True)),
                ('before_and_after_cleaned_image', models.ManyToManyField(blank=True, to='college.washingmashinecleanimage')),
                ('last_cleaned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='college.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isActive', models.BooleanField(blank=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('make', models.CharField(blank=True, max_length=200, null=True)),
                ('number_plate', models.CharField(blank=True, max_length=200, null=True)),
                ('odo_meter', models.IntegerField(blank=True, default=0, null=True)),
                ('odo_meter_image', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('spare_tyre', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('front_side', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('left_side', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('right_side', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('back_side', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('fuel_level', models.IntegerField(blank=True, null=True)),
                ('expenses', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicle', to='college.vehicleexpenses')),
                ('last_driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='college.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isActive', models.BooleanField(blank=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('tag_number', models.CharField(blank=True, max_length=20, null=True)),
                ('mobile', models.BigIntegerField(blank=True, default=0, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('year', models.DateField(blank=True)),
                ('branch', models.CharField(blank=True, max_length=300, null=True)),
                ('campus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='college.campus')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RemarkByWarehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_number', models.CharField(blank=True, max_length=20, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='college.employee')),
            ],
        ),
        migrations.CreateModel(
            name='FoldingTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isActive', models.BooleanField(blank=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('table_number', models.CharField(blank=True, max_length=200, null=True)),
                ('last_used_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='college.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isActive', models.BooleanField(blank=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('college', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faculties', to='college.college')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='daily_images',
            field=models.ManyToManyField(blank=True, to='college.employeedailyimage'),
        ),
        migrations.CreateModel(
            name='DryingMashine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isActive', models.BooleanField(blank=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mashine_number', models.CharField(blank=True, max_length=100, null=True)),
                ('last_cleaned_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('0', 'Not In use'), ('1', 'Working')], max_length=100, null=True)),
                ('before_and_after_cleaned_image', models.ManyToManyField(blank=True, to='college.dryingmashinecleanimage')),
                ('last_cleaned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='college.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('complaint', models.TextField(blank=True)),
                ('campus', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='college.campus')),
                ('employee', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='college.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='college',
            name='campus_employee',
            field=models.ManyToManyField(blank=True, to='college.employee'),
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('isActive', models.BooleanField(blank=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_cloths', models.IntegerField(blank=True, default=0, null=True)),
                ('total_uniforms', models.IntegerField(blank=True, default=0, null=True)),
                ('pickup_collection_image', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('collection_in_truck_image', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('collection_in_warehouse_image', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('faculty_cloths_in_campus_image', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('faculty_cloths_in_warehouse_image', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('collection_while_dropping_in_truck', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('drop_in_campus_image', models.ImageField(blank=True, null=True, upload_to=college.models.upload_location)),
                ('current_status', models.CharField(blank=True, choices=[('0', 'Ready to Pick'), ('1', 'In Transit'), ('2', 'Washing'), ('3', 'Washing done'), ('4', 'Drying'), ('5', 'Drying done'), ('6', 'In Segregation'), ('7', 'Segregation done'), ('8', 'Ready for Delivery'), ('9', 'Delivered to campus'), ('10', 'Delivered to student')], max_length=100, null=True)),
                ('ETA', models.IntegerField(blank=True, null=True)),
                ('campus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='college.campus')),
                ('college_supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='college_supervisions', to='college.employee')),
                ('daily_image_sheet', models.ManyToManyField(blank=True, to='college.dailyimagesheet')),
                ('drop_driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drop_drivers', to='college.employee')),
                ('drying_supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drying_supervisions', to='college.employee')),
                ('faculty_day_sheet', models.ManyToManyField(blank=True, to='college.facultydaysheet')),
                ('pickup_driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pickup_collections', to='college.employee')),
                ('segregation_supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='segregation_supervisions', to='college.employee')),
                ('student_day_sheet', models.ManyToManyField(blank=True, to='college.studentdaysheet')),
                ('student_remark', models.ManyToManyField(blank=True, to='college.studentremark')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='college.employee')),
                ('warehouse_remark', models.ManyToManyField(blank=True, to='college.remarkbywarehouse')),
                ('washing_supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='washing_supervisions', to='college.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='campus',
            name='college',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='campuses', to='college.college'),
        ),
    ]
